'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.prepareForExport = undefined;

var _d = require('d3');

var _d2 = _interopRequireDefault(_d);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var prepareForExport = exports.prepareForExport = function prepareForExport(svgElement, graphElement, type) {
  var dimensions = getSvgDimensions(graphElement);
  var svg = _d2.default.select(document.createElementNS('http://www.w3.org/2000/svg', 'svg'));

  svg.append('title').text('Neo4j Graph Visualization');
  svg.append('desc').text('Created using Neo4j (http://www.neo4j.com/)');

  switch (type) {
    case 'plan':
      {
        svg = appendPlanLayers(svgElement, svg);
        break;
      }
    case 'graph':
    default:
      svg = appendGraphLayers(svgElement, svg);
  }

  svg.selectAll('.overlay, .ring').remove();
  svg.selectAll('.context-menu-item').remove();
  svg.selectAll('text').attr('font-family', 'sans-serif');

  svg.attr('width', dimensions.width);
  svg.attr('height', dimensions.height);
  svg.attr('viewBox', dimensions.viewBox);

  return svg;
};

var getSvgDimensions = function getSvgDimensions(view) {
  var boundingBox = void 0,
      dimensions = void 0;
  boundingBox = view.boundingBox();
  dimensions = {
    width: boundingBox.width,
    height: boundingBox.height,
    viewBox: [boundingBox.x, boundingBox.y, boundingBox.width, boundingBox.height].join(' ')
  };
  return dimensions;
};

var appendGraphLayers = function appendGraphLayers(svgElement, svg) {
  window.d3.select(svgElement).selectAll('g.layer').each(function (node) {
    svg.node().appendChild(window.d3.select(this).node().cloneNode(true));
  });
  return svg;
};
var appendPlanLayers = function appendPlanLayers(svgElement, svg) {
  window.d3.select(svgElement).selectAll('g.layer').each(function (node) {
    svg.node().appendChild(window.d3.select(this).node().cloneNode(true));
  });
  return svg;
};