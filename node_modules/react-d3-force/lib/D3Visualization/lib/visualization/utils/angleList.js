"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var AngleList = function () {
  function AngleList(list) {
    _classCallCheck(this, AngleList);

    this.list = list;
  }

  _createClass(AngleList, [{
    key: "getAngle",
    value: function getAngle(index) {
      return this.list[index].angle;
    }
  }, {
    key: "fixed",
    value: function fixed(index) {
      return this.list[index].fixed;
    }
  }, {
    key: "totalLength",
    value: function totalLength() {
      return this.list.length;
    }
  }, {
    key: "length",
    value: function length(run) {
      if (run.start < run.end) {
        return run.end - run.start;
      } else {
        return run.end + this.list.length - run.start;
      }
    }
  }, {
    key: "angle",
    value: function angle(run) {
      if (run.start < run.end) {
        return this.list[run.end].angle - this.list[run.start].angle;
      } else {
        return 360 - (this.list[run.start].angle - this.list[run.end].angle);
      }
    }
  }, {
    key: "wrapIndex",
    value: function wrapIndex(index) {
      if (index === -1) {
        return this.list.length - 1;
      } else if (index >= this.list.length) {
        return index - this.list.length;
      } else {
        return index;
      }
    }
  }]);

  return AngleList;
}();

exports.default = AngleList;