'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (text, fontFamily, fontSize) {
  var font = 'normal normal normal ' + fontSize + 'px/normal ' + fontFamily;
  return cache()(text + font, function () {
    return measureUsingCanvas(text, font);
  });
};

var _d = require('d3');

var _d2 = _interopRequireDefault(_d);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var measureUsingCanvas = function measureUsingCanvas(text, font) {
  var canvasSelection = _d2.default.select('canvas#textMeasurementCanvas').data([this]);
  canvasSelection.enter().append('canvas').attr('id', 'textMeasurementCanvas').style('display', 'none');

  var canvas = canvasSelection.node();
  var context = canvas.getContext('2d');
  context.font = font;
  return context.measureText(text).width;
};

var cache = function cache() {
  var cacheSize = 10000;
  var map = {};
  var list = [];
  return function (key, calc) {
    var cached = map[key];
    if (cached) {
      return cached;
    } else {
      var result = calc();
      if (list.length > cacheSize) {
        delete map[list.splice(0, 1)];
        list.push(key);
      }
      return map[key] = result;
    }
  };
};