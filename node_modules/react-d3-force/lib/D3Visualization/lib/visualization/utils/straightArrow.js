'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var StraightArrow = function StraightArrow(startRadius, endRadius, centreDistance, shaftWidth, headWidth, headHeight, captionLayout) {
  _classCallCheck(this, StraightArrow);

  this.deflection = 0;

  this.length = centreDistance - (startRadius + endRadius);

  this.shaftLength = this.length - headHeight;
  var startArrow = startRadius;
  var endShaft = startArrow + this.shaftLength;
  var endArrow = startArrow + this.length;
  var shaftRadius = shaftWidth / 2;
  var headRadius = headWidth / 2;

  this.midShaftPoint = {
    x: startArrow + this.shaftLength / 2,
    y: 0
  };

  this.outline = function (shortCaptionLength) {
    if (captionLayout === 'external') {
      var startBreak = startArrow + (this.shaftLength - shortCaptionLength) / 2;
      var endBreak = endShaft - (this.shaftLength - shortCaptionLength) / 2;

      return ['M', startArrow, shaftRadius, 'L', startBreak, shaftRadius, 'L', startBreak, -shaftRadius, 'L', startArrow, -shaftRadius, 'Z', 'M', endBreak, shaftRadius, 'L', endShaft, shaftRadius, 'L', endShaft, headRadius, 'L', endArrow, 0, 'L', endShaft, -headRadius, 'L', endShaft, -shaftRadius, 'L', endBreak, -shaftRadius, 'Z'].join(' ');
    } else {
      return ['M', startArrow, shaftRadius, 'L', endShaft, shaftRadius, 'L', endShaft, headRadius, 'L', endArrow, 0, 'L', endShaft, -headRadius, 'L', endShaft, -shaftRadius, 'L', startArrow, -shaftRadius, 'Z'].join(' ');
    }
  };

  this.overlay = function (minWidth) {
    var radius = Math.max(minWidth / 2, shaftRadius);
    return ['M', startArrow, radius, 'L', endArrow, radius, 'L', endArrow, -radius, 'L', startArrow, -radius, 'Z'].join(' ');
  };
};

exports.default = StraightArrow;