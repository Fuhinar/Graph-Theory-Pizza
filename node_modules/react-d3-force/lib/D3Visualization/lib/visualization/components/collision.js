'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _d = require('d3');

var _d2 = _interopRequireDefault(_d);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var collision = {
  avoidOverlap: function avoidOverlap(nodes) {
    var q = _d2.default.geom.quadtree(nodes);
    return Array.from(nodes).map(function (n) {
      return q.visit(collide(n));
    });
  }
};
var collide = function collide(node) {
  var r = node.radius + 10;
  var nx1 = node.x - r;
  var nx2 = node.x + r;
  var ny1 = node.y - r;
  var ny2 = node.y + r;
  return function (quad, x1, y1, x2, y2) {
    var l = void 0,
        x = void 0,
        y = void 0;
    if (quad.point && quad.point !== node) {
      x = node.x - quad.point.x;
      y = node.y - quad.point.y;
      l = Math.sqrt(x * x + y * y);
      r = node.radius + 10 + quad.point.radius;
    }
    if (l < r) {
      l = (l - r) / l * 0.5;
      node.x -= x *= l;
      node.y -= y *= l;
      quad.point.x += x;
      quad.point.y += y;
    }
    return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;
  };
};

exports.default = collision;